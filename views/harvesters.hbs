{{! Citation for the following file:
Date: 2021
Adapted from CS 340 Starter code:
Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app}}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Browse and Manage Harvesters</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <header>
    <a href="/" class="header-link">
      <h1>Browse and Manage Harvesters</h1>
    </a>
  </header>
  <nav class="nav-links">
    <a href="/orders" class="nav-button">Orders</a>
    <a href="/customers" class="nav-button">Customers</a>
    <a href="/shipments" class="nav-button">Shipments</a>
    <a href="/spice_silos" class="nav-button">Spice Silos</a>
    <a href="/harvesters" class="nav-button">Harvesters</a>
  </nav>
  <section>
    <h2>Existing Harvesters</h2>
    <table border="1" id="Harvesters-table">
      <thead>
        <tr>
          <th>Harvester ID</th>
          <th>Base City</th>
          <th>Model</th>
          <th>Team Captain</th>
          <th>Last Maintenance Date</th>
          <th>Total Harvested</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        {{#each data}}
        <tr data-value="{{this.harvester_id}}">
          <td>{{this.harvester_id}}</td>
          <td>{{this.base_city}}</td>
          <td>{{this.model}}</td>
          <td>{{this.team_captain}}</td>
          <td>{{this.last_maintenance_date}}</td>
          <td>{{this.total_harvested}}</td>
          <td>
            <button onclick="editHarvester({{this.harvester_id}})">Edit</button>
            <button onclick="deleteHarvester({{this.harvester_id}})">Delete</button>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </section>

  <section>
    <h2>Add New Harvester</h2>
    <form id="add-harvester-form-ajax">
      <label for="input-base-city">Base City:</label>
      <input type="text" id="input-base-city" name="base_city" required autocomplete="city"><br><br>
      
      <label for="input-model">Model:</label>
      <input type="text" id="input-model" name="model" required autocomplete="model"><br><br>
      
      <label for="input-team-captain">Team Captain:</label>
      <input type="text" id="input-team-captain" name="team_captain" required autocomplete="captain"><br><br>
      
      <label for="input-last-maintenance-date">Last Maintenance Date:</label>
      <input type="date" id="input-last-maintenance-date" name="last_maintenance_date" autocomplete="date"><br><br>
      
      <label for="input-total-harvested">Total Harvested:</label>
      <input type="number" id="input-total-harvested" name="total_harvested" step="0.01" required autocomplete="harvest"><br><br>
      
      <button type="submit">Add Harvester</button>
    </form>
  </section>

  <section>
    <h2>Update Harvester Information</h2>
    <p>Select a harvester to edit and update their details.</p>
    <form id="update-harvester-form-ajax">
      <input type="hidden" id="harvester-id-update" name="harvester_id">

      <label for="input-base-city-update">Base City:</label>
      <input type="text" id="input-base-city-update" name="base_city" required><br><br>
      
      <label for="input-model-update">Model:</label>
      <input type="text" id="input-model-update" name="model" required><br><br>
      
      <label for="input-team-captain-update">Team Captain:</label>
      <input type="text" id="input-team-captain-update" name="team_captain" required><br><br>
      
      <label for="input-last-maintenance-date-update">Last Maintenance Date:</label>
      <input type="date" id="input-last-maintenance-date-update" name="last_maintenance_date"><br><br>
      
      <label for="input-total-harvested-update">Total Harvested:</label>
      <input type="number" id="input-total-harvested-update" name="total_harvested" step="0.01" required><br><br>
      
      <button type="submit">Update Harvester</button>
    </form>
  </section>

  <!-- Load the DOM updates file first -->
  <script src="/js/harvesters/harvester_dom_updates.js"></script>
  <!-- Then load the CRUD operation scripts -->
  <script src="/js/harvesters/add_harvester.js"></script>
  <script src="/js/harvesters/update_harvester.js"></script>
  <script src="/js/harvesters/delete_harvester.js"></script>
  
  <!-- harvester-silo association section -->
<section>
  <h2>Manage Harvester-Silo Associations</h2>
  <table border="1" id="Harvesters-Silos-table">
    <thead>
      <tr>
        <th>Association ID</th>
        <th>Harvester</th>
        <th>Silo</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      {{#each associations}}
      <tr data-value="{{this.harvester_silo_id}}" data-harvester-id="{{this.harvester_id}}" data-silo-id="{{this.silo_id}}">
        <td>{{this.harvester_silo_id}}</td>
        <td>{{this.harvester_info}}</td>
        <td>{{this.silo_info}}</td>
        <td>
          <button onclick="editHarvesterSilo({{this.harvester_silo_id}})">Edit</button>
          <button onclick="deleteHarvesterSilo({{this.harvester_silo_id}})">Delete</button>
        </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
  
  <h3 id="harvester-silo-form-title">Add Harvester-Silo Association</h3>
  <form id="harvester-silo-form-ajax">
    <input type="hidden" id="harvester-silo-id" name="harvester_silo_id" value="">
    <input type="hidden" id="form-mode" value="add">

    <label for="input-harvester-id">Select Harvester:</label>
    <select id="input-harvester-id" name="harvester_id" required>
      <option value="">--Select Harvester--</option>
      {{#each data}}
      <option value="{{this.harvester_id}}">{{this.model}} ({{this.base_city}}) - Captain: {{this.team_captain}}</option>
      {{/each}}
    </select><br><br>

    <label for="input-silo-id">Select Silo:</label>
    <select id="input-silo-id" name="silo_id" required>
      <option value="">--Select Silo--</option>
      {{#each silos}}
      <option value="{{this.silo_id}}">Silo {{this.silo_id}} ({{this.city}}, Capacity: {{this.spice_capacity}})</option>
      {{/each}}
    </select><br><br>

    <button type="submit" id="submit-button">Add Association</button>
    <button type="button" id="cancel-button" style="display: none;" onclick="resetForm()">Cancel</button>
  </form>
</section>

<!-- Harvester-Silo script -->
<script>
  // Get the form element
  let harvesterSiloForm = document.getElementById('harvester-silo-form-ajax');
  let formMode = document.getElementById('form-mode');
  let formTitle = document.getElementById('harvester-silo-form-title');
  let submitButton = document.getElementById('submit-button');
  let cancelButton = document.getElementById('cancel-button');

  // Debug version of the function to edit a harvester-silo association
  function editHarvesterSilo(association_id) {
    console.log("=== Starting editHarvesterSilo debug ===");
    console.log("Looking for association with ID:", association_id);
    
    // First, let's inspect all rows to see if data attributes are present
    console.log("Inspecting all rows in the table:");
    let allRows = document.querySelectorAll("#Harvesters-Silos-table tbody tr");
    console.log("Found", allRows.length, "rows in the table");
    
    allRows.forEach((row, index) => {
      console.log("Row", index + 1, "attributes:");
      console.log("  data-value:", row.getAttribute("data-value"));
      console.log("  data-harvester-id:", row.getAttribute("data-harvester-id"));
      console.log("  data-silo-id:", row.getAttribute("data-silo-id"));
    });
    
    // Now let's try to find our specific row
    let row = document.querySelector(`tr[data-value='${association_id}']`);
    
    if (!row) {
      console.error("Could not find row with association_id:", association_id);
      console.log("Let's try another selector method:");
      
      // Try an alternative method to find the row
      allRows.forEach((r, index) => {
        if (r.cells[0].textContent.trim() == association_id) {
          console.log("Found row by cell content at index:", index);
          row = r;
        }
      });
      
      if (!row) {
        console.error("Still couldn't find the row. Aborting.");
        return;
      }
    }
    
    // Get harvester and silo IDs from data attributes
    let harvesterId = row.getAttribute("data-harvester-id");
    let siloId = row.getAttribute("data-silo-id");
    
    console.log("Found row data attributes:");
    console.log("  data-value:", row.getAttribute("data-value"));
    console.log("  data-harvester-id:", harvesterId);
    console.log("  data-silo-id:", siloId);
    
    // If data attributes are null, let's try to extract from cells
    if (!harvesterId || !siloId) {
      console.log("Data attributes are null, trying to extract from table cells instead");
      
      // Let's try to extract the IDs from the harvester_info and silo_info
      // This is a backup method and may not be reliable
      
      // First cell is the ID, second is harvester info, third is silo info
      let harvesterInfo = row.cells[1].textContent.trim();
      let siloInfo = row.cells[2].textContent.trim();
      
      console.log("Harvester info cell:", harvesterInfo);
      console.log("Silo info cell:", siloInfo);
      
      // Let's check the select options to find a match
      let harvesterSelect = document.getElementById("input-harvester-id");
      let siloSelect = document.getElementById("input-silo-id");
      
      console.log("Available harvester options:");
      for (let i = 0; i < harvesterSelect.options.length; i++) {
        console.log(`  Option ${i}: value=${harvesterSelect.options[i].value}, text=${harvesterSelect.options[i].text}`);
        // Try to match the text with the harvester info
        if (harvesterSelect.options[i].text && harvesterInfo.includes